class Solution:
    def search(self, nums: List[int], target: int) -> int:
        mid = nums.__len__() // 2
        if not nums:
            return -1
        if nums.__len__() == 1 and nums[0] != target:
            return -1
        if nums[mid] == target:
            return mid
        elif nums[mid] > target:
            res = self.search(nums[:mid], target)
            return res
        else:
            res = self.search(nums[mid + 1:], target)
            if res >= 0:
                return mid + 1 + res
            else:
                return -1
# runtime:48 ms
# memory:16.2 MB
